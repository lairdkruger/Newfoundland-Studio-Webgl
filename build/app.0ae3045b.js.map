{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/webgl.js","webpack:///./src/objects/post/BloomPass.js","webpack:///./src/objects/post/GrainPassLite.js","webpack:///./src/objects/Wolf.js","webpack:///./src/objects/Skybox.js","webpack:///./src/objects/lighting/BackLighting.js","webpack:///./src/scenes/landing.js","webpack:///./src/objects/post/TVPass.js","webpack:///./src/scenes/about.js","webpack:///./src/objects/lighting/TopLighting.js","webpack:///./src/scenes/work.js","webpack:///./src/objects/lighting/WorkLighting.js","webpack:///./src/objects/post/DitherPass.js","webpack:///./src/scenes/contact.js","webpack:///./src/objects/cameras/StaticCamera.js","webpack:///./src/transitions/WebGLTransition.js","webpack:///./src/transitions/FadeTransition.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loadTexture","_x","_x2","_loadTexture","this","arguments","_callee","url","options","texture","image","regeneratorRuntime","wrap","_context","prev","next","THREE","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","renderer","initTexture","abrupt","t0","Error","concat","stop","opt","flipY","mapping","format","isJPEG","search","repeat","copy","wrapS","wrapT","minFilter","magFilter","generateMipmaps","loadEnvMap","_loadEnvMap","size","renderTarget","outTexture","basePath","extension","urls","equirectangular","pmrem","pmremEquirectangular","highestPowerOfTwo","naturalHeight","fromEquirectangularTexture","dispose","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","AssetManager","TypeError","_classPrivateFieldLooseBase","_this","_cache","fn","_onProgressListeners","_ref","type","_objectWithoutProperties","_getQueued","_queue","_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","now","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","setTimeout","_this2","forEach","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","GLTFLoader","err","fetch","then","response","json","arrayBuffer","blob","_len","text","Array","_key","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","CannonDebugRenderer","scene","world","CannonDebugRenderer_classCallCheck","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","_meshes","_material","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","WebGLApp_objectWithoutProperties","WebGLApp_classCallCheck","_updateListeners","writable","_tmpTarget","_lastTime","_width","_height","resize","_ref2","_ref2$width","width","_ref2$height","height","_ref2$pixelRatio","pixelRatio","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","currentScene","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","xrframe","orbitControls","up","fromArray","WebGLApp_classPrivateFieldLooseBase","target","lookAt","step","cannonDebugRenderer","oldScene","passes","RenderPass","pass","isLastElement","renderToScreen","render","start","isRunning","setAnimationLoop","animate","stats","begin","Math","min","maxDeltaTime","end","args","child","WebGLApp_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","setClearColor","xr","enabled","maxPixelRatio","cameraTarget","scenes","scenesParams","previousSceneKeyTemp","previousScenes","mouse","mouse2D","mouse3D","gl","getContext","performance","addEventListener","onMouseMove","postprocessing","EffectComposer","addPass","createOrbitControls","element","parent","distance","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","event","getElementById","rect","getBoundingClientRect","clientX","left","clientY","top","clientWidth","clientHeight","normalizeMouse2D","unproject","sub","normalize","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","revokeObjectURL","removeAttribute","click","lib_webgl","querySelector","addBloomPass","webgl","bloomPass","UnrealBloomPass","resolution","strength","threshold","addGrainPassLite","grainPassLite","ShaderPass","grainLiteShader","uniforms","movement","intensity","onUpdate","updateGrainLiteUniforms","tDiffuse","vertexShader","join","fragmentShader","wolfKey","assets","Wolf","Wolf_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","shaders","basicMaterialsReady","shaderMaterialsReady","addGLTF","gltf","gltfScene","bbox","setFromObject","cent","getCenter","getSize","maxAxis","max","gltfLoaded","wolf","getObjectByName","wolfSkeleton","rock","createMaterials","initAnimations","xhr","createWolfMaterial","createRockMaterial","reflectionCube","wolfMaterialKey","skinning","envMap","reflectivity","workMaterial","reflectionMaterialKey","loader","aboutMaterial","contactMaterial","mixer","clips","animations","rockPoseClip","findByName","rockPoseAction","clipAction","play","_slicedToArray","_ref6","_ref5","Skybox","Skybox_classCallCheck","Skybox_possibleConstructorReturn","Skybox_getPrototypeOf","init","skyMaterialKey","skyBoxTexture","side","customShader","from","to","onBeforeCompile","shader","rep","uTime","skyBox","delta","updateUniforms","addBackLighting","backLight","landing","LandingScene","landing_classCallCheck","sceneKey","initScene","setCamera","landingWolf","noSun","landingSkybox","cameraPosition","renderPass","addTVPass","tvPass","TVShader","distortion","distortion2","speed","rollSpeed","grainPass","tvShader","updateTVUniforms","nIntensity","sIntensity","sCount","grayscale","about","AboutScene","about_classCallCheck","topLight","aboutWolf","work","WorkScene","work_classCallCheck","workLight","workWolf","workSkybox","ditherShader","opacity","contact","ContactScene","contact_classCallCheck","contactWolf","contactSkybox","ditherPass","StaticCameraBehaviour","StaticCamera_classCallCheck","staticPosition","currentSceneParams","easeTarget","movementIntensity","ease","updateCamera","inTransition","mouseX","mouseY","sceneTransition","_sceneTransition","duration","cameraTween","TweenLite","onComplete","require","FadeTransition","FadeTransition_classCallCheck","webglDuration","screenDuration","screen","getElementsByClassName","tl","display","setNewScene","renderToImage","imageDataURL","loadingScreen","src","_callee3","_context3","everything","current","container","TweenMax","trigger","pop","dataset","screenOut","location","visibility","WEBGL","fadeTransition","barba","debug","preventRunning","transitions","beforeLeave","src_asyncToGenerator","leave","enter","afterEnter","_callee4","_context4","views","namespace","beforeEnter","_callee5","_context5","landingScene","_callee6","_context6","aboutScene","_callee7","_context7","workScene","_callee8","_context8","contactScene"],"mappings":"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","file":"app.0ae3045b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([206,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// @mattdesl x marcofugaro\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n    const texture = new THREE.Texture()\n    texture.name = url\n    texture.encoding = options.encoding || THREE.LinearEncoding\n    setTextureParams(url, texture, options)\n\n    try {\n        const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n        texture.image = image\n        texture.needsUpdate = true\n        if (options.renderer) {\n            // Force texture to be uploaded to GPU immediately,\n            // this will avoid \"jank\" on first rendered frame\n            options.renderer.initTexture(texture)\n        }\n        return texture\n    } catch (err) {\n        throw new Error(`Could not load texture ${url}`)\n    }\n}\n\nfunction setTextureParams(url, texture, opt) {\n    if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n    if (typeof opt.mapping !== 'undefined') {\n        texture.mapping = opt.mapping\n    }\n    if (typeof opt.format !== 'undefined') {\n        texture.format = opt.format\n    } else {\n        // choose a nice default format\n        const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n        texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n    }\n    if (opt.repeat) texture.repeat.copy(opt.repeat)\n    texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n    texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n    texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n    texture.magFilter = opt.magFilter || THREE.LinearFilter\n    texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// @mattdesl x marcofugaro\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n    const renderer = options.renderer\n\n    if (!renderer) {\n        throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n    }\n\n    if (options.equirectangular) {\n        const texture = await loadTexture(url, { renderer })\n\n        if (options.pmrem) {\n            return pmremEquirectangular(texture, renderer)\n        } else {\n            const size = highestPowerOfTwo(texture.image.naturalHeight)\n            const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n                generateMipmaps: true,\n                minFilter: THREE.LinearMipmapLinearFilter,\n                magFilter: THREE.LinearFilter,\n            })\n\n            const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture)\n\n            texture.dispose() // dispose original texture\n            texture.image.data = null // remove image reference\n\n            return outTexture\n        }\n    }\n\n    const basePath = url\n    const extension = options.extension || '.jpg'\n    const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n    if (extension === '.hdr') {\n        // load a float HDR texture\n        return new Promise((resolve, reject) => {\n            new HDRCubeTextureLoader().load(\n                THREE.UnsignedByteType,\n                urls,\n                (cubeMap) => resolve(assignCubemapOptions(cubeMap, options)),\n                null,\n                () => reject(new Error(`Could not load env map: ${basePath}`))\n            )\n        })\n    }\n\n    // load a RGBM encoded texture\n    return new Promise((resolve, reject) => {\n        new THREE.CubeTextureLoader().load(\n            urls,\n            (cubeMap) => resolve(assignCubemapOptions(cubeMap, options)),\n            null,\n            () => reject(new Error(`Could not load env map: ${basePath}`))\n        )\n    })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n    if (options.encoding) {\n        cubeMap.encoding = options.encoding\n    }\n    if (options.format) {\n        cubeMap.format = options.format\n    }\n    if (options.pmrem) {\n        cubeMap = pmremCubemap(cubeMap, options.renderer)\n    }\n    return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\n    pmremGenerator.compileEquirectangularShader()\n\n    const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n    pmremGenerator.dispose() // dispose PMREMGenerator\n    texture.dispose() // dispose original texture\n    texture.image.data = null // remove image reference\n\n    return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\n    pmremGenerator.compileCubemapShader()\n    const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n    pmremGenerator.dispose() // dispose PMREMGenerator\n    cubeMap.dispose() // dispose original texture\n    cubeMap.image.data = null // remove image reference\n\n    return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n    return [\n        `${prefix}px${postfix}`,\n        `${prefix}nx${postfix}`,\n        `${prefix}py${postfix}`,\n        `${prefix}ny${postfix}`,\n        `${prefix}pz${postfix}`,\n        `${prefix}nz${postfix}`,\n    ]\n}\n","// @mattdesl x marcofugaro\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n    #queue = []\n    #cache = {}\n    #onProgressListeners = []\n    #asyncConcurrency = 10\n    #logs = []\n\n    addProgressListener(fn) {\n        if (typeof fn !== 'function') {\n            throw new TypeError('onProgress must be a function')\n        }\n        this.#onProgressListeners.push(fn)\n    }\n\n    // Add an asset to be queued, input: { url, type, ...options }\n    queue({ url, type, ...options }) {\n        if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n        if (!this._getQueued(url)) {\n            this.#queue.push({ url, type: type || this._extractType(url), ...options })\n        }\n\n        return url\n    }\n\n    _getQueued(url) {\n        return this.#queue.find((item) => item.url === url)\n    }\n\n    _extractType(url) {\n        const ext = url.slice(url.lastIndexOf('.'))\n\n        switch (true) {\n            case /\\.(gltf|glb)$/i.test(ext):\n                return 'gltf'\n            case /\\.json$/i.test(ext):\n                return 'json'\n            case /\\.svg$/i.test(ext):\n                return 'svg'\n            case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n                return 'image'\n            case /\\.(wav|mp3)$/i.test(ext):\n                return 'audio'\n            case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n                return 'video'\n            default:\n                throw new Error(`Could not load ${url}, unknown file extension!`)\n        }\n    }\n\n    // Fetch a loaded asset by URL\n    get = (url) => {\n        if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n        if (!(url in this.#cache)) {\n            throw new Error(`The asset ${url} is not in the loaded files.`)\n        }\n\n        return this.#cache[url]\n    }\n\n    // Loads a single asset\n    async loadSingle({ renderer, ...item }) {\n        // renderer is used to load textures and env maps,\n        // but require it always since it is an extensible pattern\n        if (!renderer) {\n            throw new Error('You must provide a renderer to the loadSingle function.')\n        }\n\n        try {\n            const itemLoadingStart = Date.now()\n\n            this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n            if (window.DEBUG) {\n                console.log(\n                    `📦 Loaded single asset %c${item.url}%c in ${prettyMs(\n                        Date.now() - itemLoadingStart\n                    )}`,\n                    'color:blue',\n                    'color:black'\n                )\n            }\n\n            return item.url\n        } catch (err) {\n            delete this.#cache[item.url]\n            console.error(`📦  Could not load ${item.url}:\\n${err}`)\n        }\n    }\n\n    // Loads all queued assets\n    async load({ renderer }) {\n        // renderer is used to load textures and env maps,\n        // but require it always since it is an extensible pattern\n        if (!renderer) {\n            throw new Error('You must provide a renderer to the load function.')\n        }\n\n        const queue = this.#queue.slice()\n        this.#queue.length = 0 // clear queue\n\n        const total = queue.length\n        if (total === 0) {\n            // resolve first this functions and then call the progress listeners\n            setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n            return\n        }\n\n        const loadingStart = Date.now()\n\n        await pMap(\n            queue,\n            async (item, i) => {\n                try {\n                    const itemLoadingStart = Date.now()\n\n                    this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n                    if (window.DEBUG) {\n                        this.log(\n                            `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n                            'color:blue',\n                            'color:black'\n                        )\n                    }\n                } catch (err) {\n                    this.logError(`Skipping ${item.url} from asset loading:\\n${err}`)\n                }\n\n                const percent = (i + 1) / total\n                this.#onProgressListeners.forEach((fn) => fn(percent))\n            },\n            { concurrency: this.#asyncConcurrency }\n        )\n\n        if (window.DEBUG) {\n            const errors = this.#logs.filter((log) => log.type === 'error')\n\n            this.groupLog(\n                `📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱ ${\n                    errors.length > 0\n                        ? `%c ⚠️ Skipped ${errors.length} asset${errors.length > 1 ? 's' : ''} `\n                        : ''\n                }`,\n                errors.length > 0 ? 'color:white;background:red;' : ''\n            )\n        }\n    }\n\n    // Loads a single asset on demand, returning from\n    // cache if it exists otherwise adding it to the cache\n    // after loading.\n    async _loadItem({ url, type, renderer, ...options }) {\n        if (url in this.#cache) {\n            return this.#cache[url]\n        }\n\n        switch (type) {\n            case 'gltf':\n                return new Promise((resolve, reject) => {\n                    new GLTFLoader().load(url, resolve, null, (err) =>\n                        reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n                    )\n                })\n            case 'json':\n                return fetch(url).then((response) => response.json())\n            case 'env-map':\n                return loadEnvMap(url, { renderer, ...options })\n            case 'svg':\n            case 'image':\n                return loadImage(url, { crossorigin: 'anonymous' })\n            case 'texture':\n                return loadTexture(url, { renderer, ...options })\n            case 'audio':\n                // You might not want to load big audio files and\n                // store them in memory, that might be inefficient.\n                // Rather load them outside of the queue\n                return fetch(url).then((response) => response.arrayBuffer())\n            case 'video':\n                // You might not want to load big video files and\n                // store them in memory, that might be inefficient.\n                // Rather load them outside of the queue\n                return fetch(url).then((response) => response.blob())\n            default:\n                throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n        }\n    }\n\n    log(...text) {\n        this.#logs.push({ type: 'log', text })\n    }\n\n    logError(...text) {\n        this.#logs.push({ type: 'error', text })\n    }\n\n    groupLog(...text) {\n        console.groupCollapsed(...text)\n        this.#logs.forEach((log) => {\n            console[log.type](...log.text)\n        })\n        console.groupEnd()\n\n        this.#logs.length = 0 // clear logs\n    }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n    tmpVec0 = new CANNON.Vec3()\n    tmpVec1 = new CANNON.Vec3()\n    tmpVec2 = new CANNON.Vec3()\n    tmpQuat0 = new CANNON.Vec3()\n\n    constructor(scene, world) {\n        this.scene = scene\n        this.world = world\n\n        this._meshes = []\n\n        this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n        this._sphereGeometry = new THREE.SphereGeometry(1)\n        this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n        this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n        this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n    }\n\n    update() {\n        const { bodies } = this.world\n        const meshes = this._meshes\n        const shapeWorldPosition = this.tmpVec0\n        const shapeWorldQuaternion = this.tmpQuat0\n\n        let meshIndex = 0\n\n        for (let i = 0; i !== bodies.length; i++) {\n            const body = bodies[i]\n\n            for (let j = 0; j !== body.shapes.length; j++) {\n                const shape = body.shapes[j]\n\n                this._updateMesh(meshIndex, body, shape)\n\n                const mesh = meshes[meshIndex]\n\n                if (mesh) {\n                    // Get world position\n                    body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n                    body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n                    // Get world quaternion\n                    body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n                    // Copy to meshes\n                    mesh.position.copy(shapeWorldPosition)\n                    mesh.quaternion.copy(shapeWorldQuaternion)\n\n                    // Change the visiblity\n                    if ('visible' in body) {\n                        mesh.visible = body.visible\n                    }\n                }\n\n                meshIndex += 1\n            }\n        }\n\n        for (let i = meshIndex; i < meshes.length; i++) {\n            const mesh = meshes[i]\n            if (mesh) {\n                this.scene.remove(mesh)\n            }\n        }\n\n        meshes.length = meshIndex\n    }\n\n    _updateMesh(index, body, shape) {\n        let mesh = this._meshes[index]\n        if (!this._typeMatch(mesh, shape)) {\n            if (mesh) {\n                this.scene.remove(mesh)\n            }\n            mesh = this._meshes[index] = this._createMesh(shape)\n        }\n        this._scaleMesh(mesh, shape)\n    }\n\n    _createMesh(shape) {\n        let mesh\n        const material = this._material\n\n        const geo = new THREE.Geometry()\n\n        switch (shape.type) {\n            case CANNON.Shape.types.SPHERE:\n                mesh = new THREE.Mesh(this._sphereGeometry, material)\n                break\n\n            case CANNON.Shape.types.BOX:\n                mesh = new THREE.Mesh(this._boxGeometry, material)\n                break\n\n            case CANNON.Shape.types.PLANE:\n                mesh = new THREE.Mesh(this._planeGeometry, material)\n                break\n\n            case CANNON.Shape.types.CONVEXPOLYHEDRON:\n                // Create mesh\n\n                // Add vertices\n                for (let i = 0; i < shape.vertices.length; i++) {\n                    const v = shape.vertices[i]\n                    geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n                }\n\n                for (let i = 0; i < shape.faces.length; i++) {\n                    const face = shape.faces[i]\n\n                    // add triangles\n                    const a = face[0]\n                    for (let j = 1; j < face.length - 1; j++) {\n                        const b = face[j]\n                        const c = face[j + 1]\n                        geo.faces.push(new THREE.Face3(a, b, c))\n                    }\n                }\n                geo.computeBoundingSphere()\n                geo.computeFaceNormals()\n\n                mesh = new THREE.Mesh(geo, material)\n                shape.geometryId = geo.id\n                break\n\n            case CANNON.Shape.types.TRIMESH:\n                for (let i = 0; i < shape.indices.length / 3; i++) {\n                    shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n                    geo.vertices.push(\n                        new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                        new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                        new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n                    )\n                    const j = geo.vertices.length - 3\n                    geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n                }\n                geo.computeBoundingSphere()\n                geo.computeFaceNormals()\n                mesh = new THREE.Mesh(geo, material)\n                shape.geometryId = geo.id\n                break\n\n            case CANNON.Shape.types.HEIGHTFIELD:\n                for (let xi = 0; xi < shape.data.length - 1; xi++) {\n                    for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n                        for (let k = 0; k < 2; k++) {\n                            shape.getConvexTrianglePillar(xi, yi, k === 0)\n                            this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n                            this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n                            this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n                            this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n                            this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n                            this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n                            geo.vertices.push(\n                                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n                            )\n                            const ii = geo.vertices.length - 3\n                            geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n                        }\n                    }\n                }\n                geo.computeBoundingSphere()\n                geo.computeFaceNormals()\n                mesh = new THREE.Mesh(geo, material)\n                shape.geometryId = geo.id\n                break\n            default:\n                break\n        }\n\n        if (mesh) {\n            this.scene.add(mesh)\n        }\n\n        return mesh\n    }\n\n    _typeMatch(mesh, shape) {\n        if (!mesh) {\n            return false\n        }\n        const geo = mesh.geometry\n        return (\n            (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n            (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n            (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n            (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n            (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n            (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n        )\n    }\n\n    _scaleMesh(mesh, shape) {\n        const { radius } = shape\n\n        switch (shape.type) {\n            case CANNON.Shape.types.SPHERE:\n                mesh.scale.set(radius, radius, radius)\n                break\n\n            case CANNON.Shape.types.BOX:\n                mesh.scale.copy(shape.halfExtents)\n                mesh.scale.multiplyScalar(2)\n                break\n\n            case CANNON.Shape.types.CONVEXPOLYHEDRON:\n                mesh.scale.set(1, 1, 1)\n                break\n\n            case CANNON.Shape.types.TRIMESH:\n                mesh.scale.copy(shape.scale)\n                break\n\n            case CANNON.Shape.types.HEIGHTFIELD:\n                mesh.scale.set(1, 1, 1)\n                break\n            default:\n                break\n        }\n    }\n}\n","// @mattdesl x marcofugaro\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport CannonDebugRenderer from './CannonDebugRenderer'\n\nexport default class WebGLApp {\n    #updateListeners = []\n    #tmpTarget = new THREE.Vector3()\n    #lastTime\n    #width\n    #height\n\n    constructor({\n        background = '#000',\n        backgroundAlpha = 1,\n        fov = 45,\n        near = 0.01,\n        far = 5000,\n        ...options\n    } = {}) {\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: false,\n            // enabled for saving screenshots of the canvas,\n            // may wish to disable this for perf reasons\n            preserveDrawingBuffer: false,\n            failIfMajorPerformanceCaveat: true,\n            ...options,\n        })\n\n        this.renderer.sortObjects = false\n        this.canvas = this.renderer.domElement\n\n        this.renderer.setClearColor(background, backgroundAlpha)\n\n        if (options.xr) {\n            this.renderer.xr.enabled = true\n        }\n\n        // save the fixed dimensions\n        this.#width = options.width\n        this.#height = options.height\n\n        // clamp pixel ratio for performance\n        this.maxPixelRatio = options.maxPixelRatio || 2\n        // clamp delta to stepping anything too far forward\n        this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n        // setup a basic camera\n        this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n        this.cameraTarget = new THREE.Vector3(0, 0, 0)\n\n        // object to hold multiple scenes\n        this.scenes = {}\n        this.scenesParams = {}\n\n        // init a default scene\n        this.scenes['defaultScene'] = new THREE.Scene()\n\n        // set renderer to render default scene\n        this.currentScene = this.scenes['defaultScene']\n\n        // used for updating composer\n        this.oldScene = this.currentScene\n\n        // used for handling browser back button events\n        this.previousSceneKeyTemp = ''\n        this.previousScenes = []\n\n        // mouse\n        this.mouse = new THREE.Vector3()\n        this.mouse2D = new THREE.Vector2()\n        this.mouse3D = new THREE.Vector3()\n\n        this.gl = this.renderer.getContext()\n\n        this.time = 0\n        this.isRunning = false\n        this.#lastTime = performance.now()\n\n        // handle mouse move events (without touch handler)\n        window.addEventListener('mousemove', this.onMouseMove.bind(this), false)\n\n        // handle resize events\n        window.addEventListener('resize', this.resize)\n        window.addEventListener('orientationchange', this.resize)\n\n        // force an initial resize event\n        this.resize()\n\n        // __________________________ADDONS__________________________\n\n        // really basic touch handler that propagates through the scene\n        // this.touchHandler = createTouches(this.canvas, {\n        //     target: this.canvas,\n        //     filtered: true,\n        // })\n        // this.isDragging = false\n        // this.touchHandler.on('start', (ev, pos) => {\n        //     this.isDragging = true\n        //     this.traverse('onPointerDown', ev, pos)\n        // })\n        // this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n        // this.touchHandler.on('end', (ev, pos) => {\n        //     this.isDragging = false\n        //     this.traverse('onPointerUp', ev, pos)\n        // })\n\n        // expose a composer for postprocessing passes\n        if (options.postprocessing) {\n            this.composer = new EffectComposer(this.renderer)\n            this.composer.addPass(new RenderPass(this.currentScene, this.camera))\n        }\n\n        // set up a simple orbit controller\n        if (options.orbitControls) {\n            this.orbitControls = createOrbitControls({\n                element: this.canvas,\n                parent: window,\n                distance: 4,\n                ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n            })\n\n            // move the camera position accordingly to the orbitcontrols options\n            this.camera.position.fromArray(this.orbitControls.position)\n            this.camera.lookAt(new THREE.Vector3().fromArray(this.orbitControls.target))\n        }\n\n        // Attach the Cannon physics engine\n        if (options.world) {\n            this.world = options.world\n            if (options.showWorldWireframes) {\n                this.cannonDebugRenderer = new CannonDebugRenderer(this.currentScene, this.world)\n            }\n        }\n\n        // show the fps meter\n        if (options.showFps) {\n            this.stats = new Stats()\n            this.stats.showPanel(0)\n            document.body.appendChild(this.stats.dom)\n        }\n\n        // initialize the controls-state\n        if (options.controls) {\n            const controlsState = State(options.controls)\n            this.controls = options.hideControls\n                ? controlsState\n                : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n            // add the custom controls-gui styles\n            if (!options.hideControls) {\n                const styles = `\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n            content: initial !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n            text-indent: 6px !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n            content: initial !important;\n          }\n        `\n                const style = document.createElement('style')\n                style.type = 'text/css'\n                style.innerHTML = styles\n                document.head.appendChild(style)\n            }\n        }\n\n        // detect the gpu info\n        const gpu = getGPUTier({ glContext: this.renderer.getContext() })\n        this.gpu = {\n            name: gpu.type,\n            tier: Number(gpu.tier.slice(-1)),\n            isMobile: gpu.tier.toLowerCase().includes('mobile'),\n        }\n    }\n\n    get width() {\n        return this.#width || window.innerWidth\n    }\n\n    get height() {\n        return this.#height || window.innerHeight\n    }\n\n    get pixelRatio() {\n        return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n    }\n\n    resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n        //update pixel ratio if necessary\n        if (this.renderer.getPixelRatio() !== pixelRatio) {\n            this.renderer.setPixelRatio(pixelRatio)\n        }\n        // setup new size & update camera aspect if necessary\n        this.renderer.setSize(width, height)\n        if (this.camera.isPerspectiveCamera) {\n            this.camera.aspect = width / height\n        }\n        this.camera.updateProjectionMatrix()\n        // resize also the composer\n        if (this.composer) {\n            this.composer.setSize(pixelRatio * width, pixelRatio * height)\n        }\n        //recursively tell all child objects to resize\n        this.currentScene.traverse((obj) => {\n            if (typeof obj.resize === 'function') {\n                obj.resize({\n                    width,\n                    height,\n                    pixelRatio,\n                })\n            }\n        })\n        // draw a frame to ensure the new size has been registered visually\n        this.draw()\n        return this\n    }\n\n    // convenience function to trigger a PNG download of the canvas\n    saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n        // force a specific output size\n        this.resize({ width, height, pixelRatio: 1 })\n        this.draw()\n\n        const dataURI = this.canvas.toDataURL('image/png')\n\n        // reset to default size\n        this.resize()\n        this.draw()\n\n        // save\n        saveDataURI(fileName, dataURI)\n    }\n\n    onMouseMove(event) {\n        // get normalized mouse position on viewport\n\n        var target = document.getElementById('webgl-canvas')\n\n        var rect = target.getBoundingClientRect()\n\n        var x = event.clientX - rect.left\n        var y = event.clientY - rect.top\n\n        this.mouse.x = (x * target.width) / target.clientWidth\n        this.mouse.y = (y * target.height) / target.clientHeight\n\n        this.mouse2D.x = (x * target.width) / target.clientWidth\n        this.mouse2D.y = (y * target.height) / target.clientHeight\n\n        this.normalizeMouse2D(target) // (0, 0) at window center\n\n        //this.updateMouse3D()\n    }\n\n    normalizeMouse2D(target) {\n        this.mouse2D.x = this.mouse2D.x / target.width - 0.5\n        this.mouse2D.y = this.mouse2D.y / target.height - 0.5\n    }\n\n    updateMouse3D() {\n        this.mouse.unproject(this.camera)\n        this.mouse.sub(this.camera.position).normalize()\n        var distance = -this.camera.position.z / this.mouse.z\n        // var distance = (targetZ - this.camera.position.z) / vec.z;\n\n        this.mouse3D.copy(this.camera.position).add(this.mouse.multiplyScalar(2.0))\n    }\n\n    update = (dt, time, xrframe) => {\n        if (this.orbitControls) {\n            this.orbitControls.update()\n\n            // reposition to orbit controls\n            this.camera.up.fromArray(this.orbitControls.up)\n            this.camera.position.fromArray(this.orbitControls.position)\n            this.#tmpTarget.fromArray(this.orbitControls.target)\n            this.camera.lookAt(this.#tmpTarget)\n        }\n\n        // recursively tell all child objects to update\n        this.currentScene.traverse((obj) => {\n            if (typeof obj.update === 'function') {\n                obj.update(dt, time, xrframe)\n            }\n        })\n\n        if (this.world) {\n            // update the Cannon physics engine\n            this.world.step(1 / 60, dt)\n\n            // update the debug wireframe renderer\n            if (this.cannonDebugRenderer) {\n                this.cannonDebugRenderer.update()\n            }\n\n            // recursively tell all child bodies to update\n            this.world.bodies.forEach((body) => {\n                if (typeof body.update === 'function') {\n                    body.update(dt, time)\n                }\n            })\n        }\n\n        // call the update listeners\n        this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n        return this\n    }\n\n    onUpdate(fn) {\n        this.#updateListeners.push(fn)\n    }\n\n    offUpdate(fn) {\n        const index = this.#updateListeners.indexOf(fn)\n\n        // return silently if the function can't be found\n        if (index === -1) {\n            return\n        }\n\n        this.#updateListeners.splice(index, 1)\n    }\n\n    draw = () => {\n        if (this.composer) {\n            if (this.currentScene != this.oldScene) {\n                // update composer if new scene requested\n\n                this.composer.passes[0] = new RenderPass(this.currentScene, this.camera)\n                this.oldScene = this.currentScene\n            }\n\n            // make sure to always render the last pass\n            this.composer.passes.forEach((pass, i, passes) => {\n                const isLastElement = i === passes.length - 1\n\n                if (isLastElement) {\n                    pass.renderToScreen = true\n                } else {\n                    pass.renderToScreen = false\n                }\n            })\n\n            this.composer.render()\n        } else {\n            this.renderer.render(this.currentScene, this.camera)\n        }\n        return this\n    }\n\n    start = () => {\n        if (this.isRunning) return\n        this.renderer.setAnimationLoop(this.animate)\n        this.isRunning = true\n        return this\n    }\n\n    stop = () => {\n        if (!this.isRunning) return\n        this.renderer.setAnimationLoop(null)\n        this.isRunning = false\n        return this\n    }\n\n    animate = (now, xrframe) => {\n        if (!this.isRunning) return\n\n        if (this.stats) this.stats.begin()\n\n        const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n        this.time += dt\n        this.#lastTime = now\n        this.update(dt, this.time, xrframe)\n        this.draw()\n\n        if (this.stats) this.stats.end()\n    }\n\n    traverse = (fn, ...args) => {\n        this.currentScene.traverse((child) => {\n            if (typeof child[fn] === 'function') {\n                child[fn].apply(child, args)\n            }\n        })\n    }\n\n    get cursor() {\n        return this.canvas.style.cursor\n    }\n\n    set cursor(cursor) {\n        if (cursor) {\n            this.canvas.style.cursor = cursor\n        } else {\n            this.canvas.style.cursor = null\n        }\n    }\n}\n\nfunction saveDataURI(name, dataURI) {\n    const blob = dataURIToBlob(dataURI)\n\n    // force download\n    const link = document.createElement('a')\n    link.download = name\n    link.href = window.URL.createObjectURL(blob)\n    link.onclick = setTimeout(() => {\n        window.URL.revokeObjectURL(blob)\n        link.removeAttribute('href')\n    }, 0)\n\n    link.click()\n}\n","/*\nExports an instance of WebGLApp as a singleton\nThis acts partly like a global variable\nTo reference this instance in another file use: import webgl from './lib/webgl'\n*/\n\nimport WebGLApp from './WebGLApp'\n\n// grab our canvas\nconst canvas = document.querySelector('#webgl-canvas')\n\nexport default new WebGLApp({\n    canvas,\n    alpha: false,\n    background: '#000',\n    backgroundAlpha: 1,\n    postprocessing: true,\n    orbitControls: false,\n})\n","import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\n\nexport function addBloomPass(webgl, scene, options) {\n    var bloomPass = new UnrealBloomPass(\n        options.resolution,\n        options.strength, // strength\n        options.radius, // radius\n        options.threshold // threshold\n    )\n\n    webgl.composer.addPass(bloomPass)\n}\n","/*\nSimple Noise/Film-Grain Shader\n- Laird Kruger\n*/\n\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\n\nexport function addGrainPassLite(webgl, options) {\n    var grainPassLite = new ShaderPass(grainLiteShader)\n\n    grainPassLite.uniforms.movement.value = 0.1\n    grainPassLite.uniforms.intensity.value = 0.1\n\n    webgl.composer.addPass(grainPassLite)\n\n    webgl.onUpdate((dt, time) => updateGrainLiteUniforms(dt))\n\n    function updateGrainLiteUniforms(dt) {\n        grainPassLite.uniforms.movement.value += dt\n    }\n}\n\nvar grainLiteShader = {\n    uniforms: {\n        tDiffuse: { value: null }, //pixel color passed over by previous shader\n        movement: { value: 0.0 }, //custom float value\n        intensity: { value: 0.0 }, //custom float value\n    },\n\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float movement;',\n        'uniform float intensity;',\n\n        'varying vec2 vUv;',\n\n        'float random( vec2 p ) {',\n        'vec2 K1 = vec2(23.14069263277926, 2.665144142690225);',\n        'return fract( cos( dot(p,K1) ) * 12345.6789 );',\n        '}',\n\n        'void main() {',\n\n        'vec4 color = texture2D( tDiffuse, vUv );',\n        'vec2 uvRandom = vUv;',\n        'uvRandom.y *= random( vec2(uvRandom.y,movement) );',\n        'color.rgb += random( uvRandom ) * intensity;',\n        'gl_FragColor = vec4( color );',\n\n        '}',\n    ].join('\\n'),\n}\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\n// preload the models\nconst wolfKey = assets.queue({\n    url: 'assets/obj/wolf.glb',\n    type: 'gltf',\n})\n\nexport default class Wolf extends THREE.Group {\n    constructor(webgl, options) {\n        super(options)\n        this.webgl = webgl\n        this.options = options\n\n        // a dictionary mapping material keys to the material's shaders\n        // allows for a modular method of adding custom shaders to existing materials\n        this.shaders = {}\n\n        // a dictionary mapping material keys to the material once material is ready\n        // used to check if material is ready before updating\n        this.basicMaterialsReady = {}\n        this.shaderMaterialsReady = {}\n\n        this.addGLTF(wolfKey)\n    }\n\n    addGLTF(key) {\n        var _this = this\n\n        // Instantiate a loader\n        var loader = new GLTFLoader()\n\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            key,\n            // called when the resource is loaded\n            function (gltf) {\n                _this.gltf = gltf\n                _this.gltfScene = gltf.scene\n\n                // scale and center object in scene\n                var bbox = new THREE.Box3().setFromObject(_this.gltfScene)\n                var cent = bbox.getCenter(new THREE.Vector3())\n                var size = bbox.getSize(new THREE.Vector3())\n\n                // rescale the object to normalized space\n                var maxAxis = Math.max(size.x, size.y, size.z)\n                _this.gltfScene.scale.multiplyScalar(1.0 / maxAxis)\n                bbox.setFromObject(_this.gltfScene)\n                bbox.getCenter(cent)\n                bbox.getSize(size)\n\n                // lower the scene slightly\n                _this.gltfScene.position.y -= 0.1\n\n                // add gtlf scene to the webgl scene (this)\n                _this.add(_this.gltfScene)\n                _this.gltfLoaded = true\n\n                // label assets\n                _this.wolf = _this.gltfScene.getObjectByName('Wolf')\n                _this.wolfSkeleton = _this.gltfScene.getObjectByName('Wolf_Skeleton')\n                _this.rock = _this.gltfScene.getObjectByName('Rock')\n\n                _this.createMaterials()\n                _this.initAnimations()\n            },\n\n            // called while loading is progressing\n            function (xhr) {},\n\n            // called when loading has errors\n            function (error) {\n                console.log(error)\n            }\n        )\n    }\n\n    createMaterials() {\n        this.createWolfMaterial()\n        this.createRockMaterial()\n    }\n\n    createWolfMaterial() {\n        var _this = this\n        var material\n\n        this.wolfMaterialKey = 'wolfMaterial'\n\n        if (this.options.scene == 'landing') {\n            landingMaterial(_this)\n        }\n\n        if (this.options.scene == 'about') {\n            aboutMaterial(_this)\n        }\n\n        if (this.options.scene == 'work') {\n            workMaterial(_this)\n        }\n\n        if (this.options.scene == 'contact') {\n            contactMaterial(_this)\n        }\n\n        function landingMaterial(_this) {\n            material = new THREE.MeshLambertMaterial({\n                color: 0xffffff,\n                skinning: true,\n                wireframe: false,\n            })\n        }\n\n        function aboutMaterial(_this) {\n            const loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/standard/colourBars_square.jpg',\n                'assets/textures/standard/colourBars_square.jpg',\n                'assets/textures/standard/colourBars_square.jpg',\n                'assets/textures/standard/colourBars_square.jpg',\n                'assets/textures/standard/colourBars_square.jpg',\n                'assets/textures/standard/colourBars_square.jpg',\n            ])\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                //map: texture,\n                envMap: reflectionCube,\n                reflectivity: 1.0,\n                skinning: true,\n            })\n        }\n\n        function workMaterial(_this) {\n            var loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n            ])\n\n            material = new THREE.MeshBasicMaterial({\n                envMap: reflectionCube,\n                color: 0xeeeeee,\n                reflectivity: 0.04,\n                skinning: true,\n                wireframe: false,\n            })\n        }\n\n        function contactMaterial(_this) {\n            var loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/standard/dogs.jpg',\n                'assets/textures/standard/dogs.jpg',\n                'assets/textures/standard/dogs.jpg',\n                'assets/textures/standard/dogs.jpg',\n                'assets/textures/standard/dogs.jpg',\n                'assets/textures/standard/dogs.jpg',\n            ])\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                skinning: true,\n                color: 0xffffff,\n                reflectivity: 1.0,\n            })\n        }\n\n        // assign scene material to wolf\n        this.wolf.material = material\n    }\n\n    createRockMaterial() {\n        var _this = this\n        this.reflectionMaterialKey = 'reflectionMaterial'\n        var material\n\n        if (this.options.scene == 'landing') {\n            landingMaterial(this)\n        }\n\n        if (this.options.scene == 'about') {\n            aboutMaterial(this)\n        }\n\n        if (this.options.scene == 'work') {\n            workMaterial(this)\n        }\n\n        if (this.options.scene == 'contact') {\n            contactMaterial(this)\n        }\n\n        function landingMaterial(_this) {\n            const loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/skyboxes/skybox1/right.jpg',\n                'assets/textures/skyboxes/skybox1/left_no_sun.jpg',\n                'assets/textures/skyboxes/skybox1/top.jpg',\n                'assets/textures/skyboxes/skybox1/bottom.jpg',\n                'assets/textures/skyboxes/skybox1/front.jpg',\n                'assets/textures/skyboxes/skybox1/back.jpg',\n            ])\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                envMap: reflectionCube,\n                reflectivity: 1.0,\n            })\n        }\n\n        function aboutMaterial(_this) {\n            const loader = new THREE.CubeTextureLoader()\n\n            if (window.innerWidth > 480) {\n                var reflectionCube = loader.load([\n                    'assets/textures/standard/static.jpg',\n                    'assets/textures/standard/static.jpg',\n                    'assets/textures/standard/static.jpg',\n                    'assets/textures/standard/static.jpg',\n                    'assets/textures/standard/static.jpg',\n                    'assets/textures/standard/static.jpg',\n                ])\n            } else {\n                // mobile\n                var reflectionCube = loader.load([\n                    'assets/textures/standard/static_dark.jpg',\n                    'assets/textures/standard/static_dark.jpg',\n                    'assets/textures/standard/static_dark.jpg',\n                    'assets/textures/standard/static_dark.jpg',\n                    'assets/textures/standard/static_dark.jpg',\n                    'assets/textures/standard/static_dark.jpg',\n                ])\n            }\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                envMap: reflectionCube,\n                reflectivity: 1.0,\n            })\n        }\n\n        function workMaterial(_this) {\n            const loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n            ])\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                envMap: reflectionCube,\n                reflectivity: 0.66,\n            })\n        }\n\n        function contactMaterial(_this) {\n            const loader = new THREE.CubeTextureLoader()\n\n            var reflectionCube = loader.load([\n                'assets/textures/skyboxes/skybox1/right.jpg',\n                'assets/textures/skyboxes/skybox1/left.jpg',\n                'assets/textures/skyboxes/skybox1/top.jpg',\n                'assets/textures/skyboxes/skybox1/bottom.jpg',\n                'assets/textures/skyboxes/skybox1/front.jpg',\n                'assets/textures/skyboxes/skybox1/back.jpg',\n            ])\n\n            reflectionCube.mapping = THREE.CubeReflectionMapping\n\n            material = new THREE.MeshBasicMaterial({\n                envMap: reflectionCube,\n                reflectivity: 1.0,\n            })\n        }\n\n        this.rock.material = material\n\n        //add material to the dictionary of ready materials\n        this.basicMaterialsReady[this.reflectionMaterialKey] = material\n    }\n\n    initAnimations() {\n        this.mixer = new THREE.AnimationMixer(this.gltfScene)\n        this.clips = this.gltf.animations\n\n        this.rockPoseClip = THREE.AnimationClip.findByName(this.clips, 'Rock Pose FK')\n        this.rockPoseAction = this.mixer.clipAction(this.rockPoseClip)\n\n        this.rockPoseAction.play()\n    }\n\n    onPointerDown(event, [x, y]) {}\n\n    onPointerMove(event, [x, y]) {}\n\n    onPointerUp(event, [x, y]) {}\n\n    update(dt, time) {\n        // update animation\n        if (this.mixer) this.mixer.update(dt)\n    }\n}\n","import * as THREE from 'three'\n\n// basic three.js component example\n\nexport default class Skybox extends THREE.Group {\n    constructor(webgl, options) {\n        super(options)\n        // these can be used also in other methods\n        this.webgl = webgl\n        this.options = options\n\n        // a dictionary mapping material keys to the material's shaders\n        // allows for a modular method of adding custom shaders to existing materials\n        this.shaders = {}\n\n        // a dictionary mapping material keys to the material once material is ready\n        // used to check if material is ready before updating\n        this.shaderMaterialsReady = {}\n\n        this.init()\n    }\n\n    init() {\n        var _this = this\n\n        this.skyMaterialKey = 'skyMaterial'\n\n        const loader = new THREE.CubeTextureLoader()\n\n        if (this.options.scene == 'landing') {\n            this.skyBoxTexture = loader.load([\n                'assets/textures/skyboxes/skybox1/right.jpg',\n                'assets/textures/skyboxes/skybox1/left.jpg',\n                'assets/textures/skyboxes/skybox1/top.jpg',\n                'assets/textures/skyboxes/skybox1/bottom.jpg',\n                'assets/textures/skyboxes/skybox1/front.jpg',\n                'assets/textures/skyboxes/skybox1/back.jpg',\n            ])\n        } else if (this.options.scene == 'work') {\n            this.skyBoxTexture = loader.load([\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n                'assets/textures/standard/shimmer.jpg',\n            ])\n        } else if (this.options.scene == 'contact') {\n            this.skyBoxTexture = loader.load([\n                'assets/textures/skyboxes/skybox1/right.jpg',\n                'assets/textures/skyboxes/skybox1/left_no_sun.jpg',\n                'assets/textures/skyboxes/skybox1/top.jpg',\n                'assets/textures/skyboxes/skybox1/bottom.jpg',\n                'assets/textures/skyboxes/skybox1/front.jpg',\n                'assets/textures/skyboxes/skybox1/back.jpg',\n            ])\n        }\n\n        //const geometry = new THREE.BoxGeometry(2000, 2000, 2000)\n        const geometry = new THREE.SphereGeometry(200, 1, 1)\n        const material = new THREE.MeshBasicMaterial({\n            side: THREE.BackSide,\n            envMap: this.skyBoxTexture,\n        })\n\n        //https://github.com/mrdoob/three.js/tree/dev/src/renderers/shaders/ShaderLib\n\n        const customShader = [\n            {\n                from: '#include <common>',\n                to: `\n                #include <common>\n                /* custom uniforms go here */\n\n                uniform float uTime;\n              `,\n            },\n            {\n                from: '#include <color_fragment>',\n                to: `\n                #include <color_fragment>\n                /* set diffuseColor.rgb here */\n\n                {\n                  float fluctuate = (sin(uTime) + 1.0) / 4.0;\n\n                  diffuseColor.rgb = vec3(1.0, 1.0, 1.0);\n                }\n              `,\n            },\n        ]\n\n        material.onBeforeCompile = function (shader) {\n            customShader.forEach((rep) => {\n                shader.fragmentShader = shader.fragmentShader.replace(rep.from, rep.to)\n            })\n\n            // custom uniforms\n            shader.uniforms.uTime = { value: 0.0 }\n\n            // make material's shader accessible\n            _this.shaders[_this.skyMaterialKey] = shader\n            _this.shaderMaterialsReady[_this.skyMaterialKey] = material\n        }\n\n        const skyBox = new THREE.Mesh(geometry, material)\n\n        this.add(skyBox)\n    }\n\n    updateUniforms(delta) {\n        if (this.skyMaterialKey in this.shaderMaterialsReady) {\n            this.shaders[this.skyMaterialKey].uniforms.uTime.value += delta\n        }\n    }\n\n    update(dt, time) {\n        this.updateUniforms(dt)\n    }\n}\n","import * as THREE from 'three'\n\nexport function addBackLighting(scene) {\n    var backLight = new THREE.DirectionalLight(0xffffff, 1.0)\n    backLight.position.set(-1, 0.0, -1)\n    scene.add(backLight)\n}\n","/*\nLanding Scene\nHandles set up and behaviour\n\nSingleton: \n    is created on first import\n    can be referenced in other modules via import\n*/\n\nimport * as THREE from 'three'\n\n// global webgl singleton\nimport webgl from '../lib/webgl'\n\n// postprocessing\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\n\nimport { addBloomPass } from '../objects/post/BloomPass'\nimport { addGrainPassLite } from '../objects/post/GrainPassLite'\n\n// objects\nimport Wolf from '../objects/Wolf'\nimport Skybox from '../objects/Skybox'\n\n// lighting\nimport { addBackLighting } from '../objects/lighting/BackLighting'\n\nclass LandingScene {\n    constructor() {\n        this.sceneKey = 'landingScene'\n\n        // create a new scene\n        webgl.scenes[this.sceneKey] = new THREE.Scene()\n\n        // quicker to type\n        this.scene = webgl.scenes[this.sceneKey]\n\n        this.initScene()\n\n        webgl.scenesParams[this.sceneKey] = this\n    }\n\n    initScene() {\n        this.setCamera()\n        addBackLighting(this.scene)\n\n        // objects\n        this.landingWolf = new Wolf(webgl, {\n            scene: 'landing',\n            noSun: true,\n        })\n\n        this.scene.add(this.landingWolf)\n\n        this.landingSkybox = new Skybox(webgl, {\n            scene: 'landing',\n        })\n\n        this.scene.add(this.landingSkybox)\n    }\n\n    setCamera() {\n        if (webgl.orbitControls) {\n            webgl.orbitControls.position = [\n                1.1770132413546304,\n                0.657532091665101,\n                0.04683957130027806,\n            ]\n            webgl.orbitControls.distance = 1.240000000000002\n            webgl.orbitControls.target = [0, -0.2, 0]\n        } else {\n            this.cameraPosition = {\n                x: 1.1,\n                y: 0.55,\n                z: 0.02,\n            }\n\n            this.cameraTarget = {\n                x: 0.0,\n                y: 0.0,\n                z: 0.0,\n            }\n        }\n    }\n\n    postprocessing() {\n        // postprocessing\n        // essential basic render (required in all scenes)\n        webgl.composer = new EffectComposer(webgl.renderer)\n        var renderPass = new RenderPass(this.scene, webgl.camera)\n        webgl.composer.addPass(renderPass)\n\n        addBloomPass(webgl, this.scene, {\n            resolution: new THREE.Vector2(window.innerWidth, window.innerHeight),\n            strength: 1.2,\n            radius: 0.5,\n            threshold: 0.7,\n        })\n\n        addGrainPassLite(webgl, {})\n\n        console.log(webgl)\n    }\n}\n\nexport default new LandingScene()\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\n\nexport function addTVPass(webgl, options) {\n    var tvPass = new ShaderPass(TVShader)\n    tvPass.uniforms.distortion.value = options.distortion\n    tvPass.uniforms.distortion2.value = options.distortion2\n    tvPass.uniforms.speed.value = options.speed\n    tvPass.uniforms.rollSpeed.value = options.rollSpeed\n\n    webgl.composer.addPass(tvPass)\n\n    var grainPass = new ShaderPass(tvShader)\n    webgl.composer.addPass(grainPass)\n\n    webgl.onUpdate((dt, time) => updateTVUniforms(dt))\n\n    function updateTVUniforms(dt) {\n        tvPass.uniforms.time.value += dt\n    }\n}\n\n/**\n * @author Felix Turner / www.airtight.cc / @felixturner\n *\n * Bad TV Shader\n * Simulates a bad TV via horizontal distortion and vertical roll\n * Uses Ashima WebGl Noise: https://github.com/ashima/webgl-noise\n *\n * Uniforms:\n * time: steadily increasing float passed in\n * distortion: amount of thick distortion\n * distortion2: amount of fine grain distortion\n * speed: distortion vertical travel speed\n * rollSpeed: vertical roll speed\n *\n * The MIT License\n *\n * Copyright (c) Felix Turner\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nvar TVShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        time: { type: 'f', value: 0.0 },\n        distortion: { type: 'f', value: 3.0 },\n        distortion2: { type: 'f', value: 5.0 },\n        speed: { type: 'f', value: 0.2 },\n        rollSpeed: { type: 'f', value: 0.1 },\n    },\n\n    vertexShader: [\n        'varying vec2 vUv;',\n        'void main() {',\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        '}',\n    ].join('\\n'),\n\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float time;',\n        'uniform float distortion;',\n        'uniform float distortion2;',\n        'uniform float speed;',\n        'uniform float rollSpeed;',\n        'varying vec2 vUv;',\n\n        // Start Ashima 2D Simplex Noise\n\n        'vec3 mod289(vec3 x) {',\n        '  return x - floor(x * (1.0 / 289.0)) * 289.0;',\n        '}',\n\n        'vec2 mod289(vec2 x) {',\n        '  return x - floor(x * (1.0 / 289.0)) * 289.0;',\n        '}',\n\n        'vec3 permute(vec3 x) {',\n        '  return mod289(((x*34.0)+1.0)*x);',\n        '}',\n\n        'float snoise(vec2 v)',\n        '  {',\n        '  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0',\n        '                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)',\n        '                     -0.577350269189626,  // -1.0 + 2.0 * C.x',\n        '                      0.024390243902439); // 1.0 / 41.0',\n        '  vec2 i  = floor(v + dot(v, C.yy) );',\n        '  vec2 x0 = v -   i + dot(i, C.xx);',\n\n        '  vec2 i1;',\n        '  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);',\n        '  vec4 x12 = x0.xyxy + C.xxzz;',\n        ' x12.xy -= i1;',\n\n        '  i = mod289(i); // Avoid truncation effects in permutation',\n        '  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))',\n        '\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));',\n\n        '  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);',\n        '  m = m*m ;',\n        '  m = m*m ;',\n\n        '  vec3 x = 2.0 * fract(p * C.www) - 1.0;',\n        '  vec3 h = abs(x) - 0.5;',\n        '  vec3 ox = floor(x + 0.5);',\n        '  vec3 a0 = x - ox;',\n\n        '  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );',\n\n        '  vec3 g;',\n        '  g.x  = a0.x  * x0.x  + h.x  * x0.y;',\n        '  g.yz = a0.yz * x12.xz + h.yz * x12.yw;',\n        '  return 130.0 * dot(m, g);',\n        '}',\n\n        // End Ashima 2D Simplex Noise\n\n        'void main() {',\n\n        'vec2 p = vUv;',\n        'float ty = time*speed;',\n        'float yt = p.y - ty;',\n        //smooth distortion\n        'float offset = snoise(vec2(yt*3.0,0.0))*0.2;',\n        // boost distortion\n        'offset = offset*distortion * offset*distortion * offset;',\n        //add fine grain distortion\n        'offset += snoise(vec2(yt*50.0,0.0))*distortion2*0.001;',\n        //combine distortion on X with roll on Y\n        'gl_FragColor = texture2D(tDiffuse,  vec2(fract(p.x + offset),fract(p.y-time*rollSpeed) ));',\n\n        '}',\n    ].join('\\n'),\n}\n\nvar tvShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        time: { type: 'f', value: 0.0 },\n        nIntensity: { type: 'f', value: 0.5 },\n        sIntensity: { type: 'f', value: 0.05 },\n        sCount: { type: 'f', value: 4096 },\n        grayscale: { type: 'i', value: 0 },\n    },\n\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n\n    fragmentShader: [\n        // control parameter\n        'uniform float time;',\n\n        'uniform bool grayscale;',\n\n        // noise effect intensity value (0 = no effect, 1 = full effect)\n        'uniform float nIntensity;',\n\n        // scanlines effect intensity value (0 = no effect, 1 = full effect)\n        'uniform float sIntensity;',\n\n        // scanlines effect count value (0 = no effect, 4096 = full effect)\n        'uniform float sCount;',\n\n        'uniform sampler2D tDiffuse;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        // sample the source\n        'vec4 cTextureScreen = texture2D( tDiffuse, vUv );',\n\n        // make some noise\n        'float x = vUv.x * vUv.y * time *  1000.0;',\n        'x = mod( x, 13.0 ) * mod( x, 123.0 );',\n        'float dx = mod( x, 0.01 );',\n\n        // add noise\n        'vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );',\n\n        // get us a sine and cosine\n        'vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );',\n\n        // add scanlines\n        'cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;',\n\n        // interpolate between source and result by intensity\n        'cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );',\n\n        // convert to grayscale if desired\n        'if( grayscale ) {',\n\n        'cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );',\n\n        '}',\n\n        'gl_FragColor =  vec4( cResult, cTextureScreen.a );',\n\n        '}',\n    ].join('\\n'),\n}\n","/*\nAbout Scene\nHandles set up and behaviour\n\nSingleton: \n    is created on first import\n    can be referenced in other modules via import\n*/\n\nimport * as THREE from 'three'\nimport webgl from '../lib/webgl'\n\n// postprocessing\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\n\nimport { addTVPass } from '../objects/post/TVPass'\nimport { addGrainPassLite } from '../objects/post/GrainPassLite'\n\n// objects\nimport Wolf from '../objects/Wolf'\n\n// lighting etc\nimport { addTopLighting } from '../objects/lighting/TopLighting'\n\nclass AboutScene {\n    constructor() {\n        this.sceneKey = 'aboutScene'\n\n        // create a new scene\n        webgl.scenes[this.sceneKey] = new THREE.Scene()\n\n        // quicker to type\n        this.scene = webgl.scenes[this.sceneKey]\n\n        this.initScene()\n\n        webgl.scenesParams[this.sceneKey] = this\n    }\n\n    initScene() {\n        this.setCamera()\n        addTopLighting(this.scene)\n\n        // objects\n        this.aboutWolf = new Wolf(webgl, {\n            scene: 'about',\n        })\n\n        this.scene.add(this.aboutWolf)\n    }\n\n    setCamera() {\n        if (webgl.orbitControls) {\n            webgl.orbitControls.position = [\n                0.37272409090935477,\n                -0.032702695716682634,\n                0.4033570652813696,\n            ]\n            webgl.orbitControls.distance = 0.5\n            webgl.orbitControls.target = [0.2, 0, 0]\n        } else {\n            if (window.innerWidth > 490) {\n                this.cameraPosition = {\n                    x: 0.4,\n                    y: 0.0,\n                    z: 0.4,\n                }\n\n                this.cameraTarget = {\n                    x: 0.0,\n                    y: 0.0,\n                    z: -0.4,\n                }\n            } else {\n                // mobile\n                this.cameraPosition = {\n                    x: 0.6,\n                    y: 0.0,\n                    z: 0.8,\n                }\n\n                this.cameraTarget = {\n                    x: 0.0,\n                    y: 0.0,\n                    z: -0.3,\n                }\n            }\n        }\n    }\n\n    postprocessing() {\n        // postprocessing\n        // essential basic render (required in all scenes)\n        webgl.composer = new EffectComposer(webgl.renderer)\n        var renderPass = new RenderPass(this.scene, webgl.camera)\n        webgl.composer.addPass(renderPass)\n\n        addTVPass(webgl, {\n            distortion: 0.8,\n            distortion2: 1.0,\n            speed: 0.5,\n            rollSpeed: 0.0,\n        })\n    }\n}\n\nexport default new AboutScene()\n","import * as THREE from 'three'\n\nexport function addTopLighting(scene) {\n    var topLight = new THREE.DirectionalLight(0xffffff, 1.0)\n    topLight.position.set(-1, 1, -1)\n    scene.add(topLight)\n}\n","/*\nWork Scene\nHandles set up and behaviour\n\nSingleton: \n    is created on first import\n    can be referenced in other modules via import\n*/\n\nimport * as THREE from 'three'\nimport webgl from '../lib/webgl'\n\n// objects\nimport Wolf from '../objects/Wolf'\nimport Skybox from '../objects/Skybox'\n\n// lighting etc\nimport { addWorkLighting } from '../objects/lighting/WorkLighting'\n\n// postprocessing\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\n\nimport { addBloomPass } from '../objects/post/BloomPass'\nimport { addGrainPassLite } from '../objects/post/GrainPassLite'\n\nclass WorkScene {\n    constructor() {\n        this.sceneKey = 'workScene'\n\n        // create a new scene\n        webgl.scenes[this.sceneKey] = new THREE.Scene()\n\n        // quicker to type\n        this.scene = webgl.scenes[this.sceneKey]\n\n        this.initScene()\n\n        webgl.scenesParams[this.sceneKey] = this\n    }\n\n    initScene() {\n        this.setCamera()\n        addWorkLighting(this.scene)\n\n        // objects\n        // 10, 6, 17 16\n        this.workWolf = new Wolf(webgl, {\n            scene: 'work',\n        })\n\n        this.scene.add(this.workWolf)\n\n        this.workSkybox = new Skybox(webgl, {\n            scene: 'work',\n        })\n        this.scene.add(this.workSkybox)\n    }\n\n    setCamera() {\n        if (webgl.orbitControls) {\n            webgl.orbitControls.position = [\n                -0.2078281158005838,\n                0.017467252995429144,\n                -0.28874058085994647,\n            ]\n            webgl.orbitControls.distance = 0.5\n            webgl.orbitControls.target = [0.2, 0, 0]\n        } else {\n            if (window.innerWidth > 480) {\n                this.cameraPosition = {\n                    x: -0.2,\n                    y: 0.2,\n                    z: -0.2,\n                }\n\n                this.cameraTarget = {\n                    x: 0.2,\n                    y: 0.02,\n                    z: -0.05,\n                }\n            } else {\n                // mobile\n                this.cameraPosition = {\n                    x: -0.65,\n                    y: 0.3,\n                    z: -0.4,\n                }\n\n                this.cameraTarget = {\n                    x: 0.2,\n                    y: 0.02,\n                    z: -0.05,\n                }\n            }\n        }\n    }\n\n    postprocessing() {\n        // postprocessing\n        // essential basic render (required in all scenes)\n        webgl.composer = new EffectComposer(webgl.renderer)\n        var renderPass = new RenderPass(this.scene, webgl.camera)\n        webgl.composer.addPass(renderPass)\n\n        addBloomPass(webgl, this.scene, {\n            resolution: new THREE.Vector2(window.innerWidth, window.innerHeight),\n            strength: 0.8,\n            radius: 0.5,\n            threshold: 0.7,\n        })\n\n        addGrainPassLite(webgl, {})\n    }\n}\n\nexport default new WorkScene()\n","import * as THREE from 'three'\n\nexport function addWorkLighting(scene) {\n    const workLight = new THREE.DirectionalLight(0xffffff, 1.0)\n    workLight.position.set(1, 1, 1)\n    scene.add(workLight)\n}\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\n\nexport function addDitherPass(webgl) {\n    var ditherPass = new ShaderPass(ditherShader)\n    webgl.composer.addPass(ditherPass)\n}\n\nvar ditherShader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        opacity: { value: 1.0 },\n    },\n\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        '\tvUv = uv;',\n        '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n\n    fragmentShader: `\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvec3 gray(vec3 color) {\n\t\t\treturn vec3(dot(color.rgb, vec3(0.299, 0.587, 0.114)));\n\t\t}\n\t\n\t\tfloat luma(vec3 color) {\n\t\t\treturn dot(color, vec3(0.299, 0.587, 0.114));\n\t\t\t\n\t\t}\n\t\t\t\n\t\tfloat luma(vec4 color) {\n\t\t\treturn dot(color.rgb, vec3(0.299, 0.587, 0.114));\n\t\t}\n\t\n\t\tfloat dither8x8(vec2 position, float brightness) {\n\t\t\tint x = int(mod(position.x, 8.0));\n\t\t\tint y = int(mod(position.y, 8.0));\n\t\t\tint index = x + y * 8;\n\t\t\tfloat limit = 0.0;\n\t\t\t\n\t\t\tif (x < 8) {\n\t\t\t\tif (index == 0) limit = 0.015625;\n\t\t\t\tif (index == 1) limit = 0.515625;\n\t\t\t\tif (index == 2) limit = 0.140625;\n\t\t\t\tif (index == 3) limit = 0.640625;\n\t\t\t\tif (index == 4) limit = 0.046875;\n\t\t\t\tif (index == 5) limit = 0.546875;\n\t\t\t\tif (index == 6) limit = 0.171875;\n\t\t\t\tif (index == 7) limit = 0.671875;\n\t\t\t\tif (index == 8) limit = 0.765625;\n\t\t\t\tif (index == 9) limit = 0.265625;\n\t\t\t\tif (index == 10) limit = 0.890625;\n\t\t\t\tif (index == 11) limit = 0.390625;\n\t\t\t\tif (index == 12) limit = 0.796875;\n\t\t\t\tif (index == 13) limit = 0.296875;\n\t\t\t\tif (index == 14) limit = 0.921875;\n\t\t\t\tif (index == 15) limit = 0.421875;\n\t\t\t\tif (index == 16) limit = 0.203125;\n\t\t\t\tif (index == 17) limit = 0.703125;\n\t\t\t\tif (index == 18) limit = 0.078125;\n\t\t\t\tif (index == 19) limit = 0.578125;\n\t\t\t\tif (index == 20) limit = 0.234375;\n\t\t\t\tif (index == 21) limit = 0.734375;\n\t\t\t\tif (index == 22) limit = 0.109375;\n\t\t\t\tif (index == 23) limit = 0.609375;\n\t\t\t\tif (index == 24) limit = 0.953125;\n\t\t\t\tif (index == 25) limit = 0.453125;\n\t\t\t\tif (index == 26) limit = 0.828125;\n\t\t\t\tif (index == 27) limit = 0.328125;\n\t\t\t\tif (index == 28) limit = 0.984375;\n\t\t\t\tif (index == 29) limit = 0.484375;\n\t\t\t\tif (index == 30) limit = 0.859375;\n\t\t\t\tif (index == 31) limit = 0.359375;\n\t\t\t\tif (index == 32) limit = 0.0625;\n\t\t\t\tif (index == 33) limit = 0.5625;\n\t\t\t\tif (index == 34) limit = 0.1875;\n\t\t\t\tif (index == 35) limit = 0.6875;\n\t\t\t\tif (index == 36) limit = 0.03125;\n\t\t\t\tif (index == 37) limit = 0.53125;\n\t\t\t\tif (index == 38) limit = 0.15625;\n\t\t\t\tif (index == 39) limit = 0.65625;\n\t\t\t\tif (index == 40) limit = 0.8125;\n\t\t\t\tif (index == 41) limit = 0.3125;\n\t\t\t\tif (index == 42) limit = 0.9375;\n\t\t\t\tif (index == 43) limit = 0.4375;\n\t\t\t\tif (index == 44) limit = 0.78125;\n\t\t\t\tif (index == 45) limit = 0.28125;\n\t\t\t\tif (index == 46) limit = 0.90625;\n\t\t\t\tif (index == 47) limit = 0.40625;\n\t\t\t\tif (index == 48) limit = 0.25;\n\t\t\t\tif (index == 49) limit = 0.75;\n\t\t\t\tif (index == 50) limit = 0.125;\n\t\t\t\tif (index == 51) limit = 0.625;\n\t\t\t\tif (index == 52) limit = 0.21875;\n\t\t\t\tif (index == 53) limit = 0.71875;\n\t\t\t\tif (index == 54) limit = 0.09375;\n\t\t\t\tif (index == 55) limit = 0.59375;\n\t\t\t\tif (index == 56) limit = 1.0;\n\t\t\t\tif (index == 57) limit = 0.5;\n\t\t\t\tif (index == 58) limit = 0.875;\n\t\t\t\tif (index == 59) limit = 0.375;\n\t\t\t\tif (index == 60) limit = 0.96875;\n\t\t\t\tif (index == 61) limit = 0.46875;\n\t\t\t\tif (index == 62) limit = 0.84375;\n\t\t\t\tif (index == 63) limit = 0.34375;\n\t\t\t}\n\t\t\t\n\t\t\treturn brightness < limit ? 0.0 : 1.0;\n\t\t}\n\t\t\t\n\t\tvec3 dither8x8(vec2 position, vec3 color) {\n\t\t\treturn vec3(1.0, 1.0, 1.0) * dither8x8(position, luma(color));\n\t\t}\n\n\t\tvec4 dither8x8(vec2 position, vec4 color) {\n\t\t\treturn vec4(color.rgb * dither8x8(position, luma(color)), color.a);\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 color = texture2D(tDiffuse, vUv);\n\n\t\t\tvec3 grayscale = gray(color.rgb);\n        \n        \tvec4 dither = dither8x8(gl_FragCoord.xy, vec4(grayscale.rgb, opacity));\n\n        \tgl_FragColor = vec4(dither.rgb, opacity);\n\n\t\t}\n\n\t`,\n}\n","/*\nContact Scene\nHandles set up and behaviour\n\nSingleton: \n    is created on first import\n    can be referenced in other modules via import\n*/\n\nimport * as THREE from 'three'\n\n// global webgl singleton\nimport webgl from '../lib/webgl'\n\n// postprocessing\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\n\nimport { addDitherPass } from '../objects/post/DitherPass'\n\n// objects\nimport Wolf from '../objects/Wolf'\nimport Skybox from '../objects/Skybox'\n\n// lighting\nimport { addBackLighting } from '../objects/lighting/BackLighting'\n\nclass ContactScene {\n    constructor() {\n        this.sceneKey = 'contactScene'\n\n        // create a new scene\n        webgl.scenes[this.sceneKey] = new THREE.Scene()\n\n        // quicker to type\n        this.scene = webgl.scenes[this.sceneKey]\n\n        this.initScene()\n\n        webgl.scenesParams[this.sceneKey] = this\n    }\n\n    initScene() {\n        this.setCamera()\n        addBackLighting(this.scene)\n\n        // objects\n        this.contactWolf = new Wolf(webgl, {\n            scene: 'contact',\n        })\n\n        this.scene.add(this.contactWolf)\n\n        this.contactSkybox = new Skybox(webgl, {\n            scene: 'contact',\n        })\n\n        this.scene.add(this.contactSkybox)\n    }\n\n    setCamera() {\n        if (webgl.orbitControls) {\n            webgl.orbitControls.position = [\n                1.1770132413546304,\n                0.657532091665101,\n                0.04683957130027806,\n            ]\n            webgl.orbitControls.distance = 1.240000000000002\n            webgl.orbitControls.target = [0, -0.2, 0]\n        } else {\n            if (window.innerWidth > 480) {\n                this.cameraPosition = {\n                    x: 0.2,\n                    y: -0.2,\n                    z: -0.2,\n                }\n\n                this.cameraTarget = {\n                    x: 0.0,\n                    y: -0.5,\n                    z: 0.05,\n                }\n            } else {\n                // mobile\n                this.cameraPosition = {\n                    x: 0.4,\n                    y: -0.4,\n                    z: -0.4,\n                }\n\n                this.cameraTarget = {\n                    x: 0.0,\n                    y: -0.6,\n                    z: 0.05,\n                }\n            }\n        }\n    }\n\n    postprocessing() {\n        // postprocessing\n        // essential basic render (required in all scenes)\n        webgl.composer = new EffectComposer(webgl.renderer)\n        var renderPass = new RenderPass(this.scene, webgl.camera)\n        webgl.composer.addPass(renderPass)\n\n        addDitherPass(webgl, {})\n    }\n}\n\nexport default new ContactScene()\n","import * as THREE from 'three'\n\nexport default class StaticCameraBehaviour {\n    constructor(webgl) {\n        this.webgl = webgl\n\n        // initial positions\n        this.staticPosition = this.webgl.currentSceneParams.cameraPosition\n        this.webgl.cameraTarget = this.webgl.currentSceneParams.cameraTarget\n\n        // easing and params\n        this.easeTarget = new THREE.Vector3()\n        this.movementIntensity = 0.1\n        this.ease = 0.05\n\n        this.init()\n    }\n\n    init() {\n        var _this = this\n\n        if (!window.DEBUG) {\n            this.webgl.onUpdate((dt, time) => _this.updateCamera())\n        }\n    }\n\n    updateCamera() {\n        if (!this.webgl.camera.inTransition) {\n            this.staticPosition = this.webgl.currentSceneParams.cameraPosition\n            this.webgl.cameraTarget = this.webgl.currentSceneParams.cameraTarget\n\n            var mouseX = this.webgl.mouse2D.x * this.movementIntensity\n            var mouseY = this.webgl.mouse2D.y * this.movementIntensity\n\n            this.easeTarget.x += (mouseX - this.easeTarget.x) * this.ease\n            this.easeTarget.y += (mouseY - this.easeTarget.y) * this.ease\n            this.easeTarget.z += (mouseX - this.easeTarget.z) * this.ease\n\n            this.webgl.camera.position.x = this.staticPosition.x - this.easeTarget.x\n            this.webgl.camera.position.y = this.staticPosition.y - this.easeTarget.y\n            this.webgl.camera.position.z = this.staticPosition.z - this.easeTarget.z\n\n            this.webgl.camera.lookAt(\n                this.webgl.cameraTarget.x,\n                this.webgl.cameraTarget.y,\n                this.webgl.cameraTarget.z\n            )\n        } else {\n            // reset values for jumpless animation\n            this.webgl.mouse2D.x = 0\n            this.webgl.mouse2D.y = 0\n\n            this.easeTarget.x = 0\n            this.easeTarget.y = 0\n            this.easeTarget.z = 0\n        }\n    }\n}\n","import { TweenLite } from 'gsap'\n\nexport async function sceneTransition(webgl, sceneKey, duration) {\n    if (window.DEBUG) return\n    webgl.camera.inTransition = true\n\n    var duration = duration / 1000\n    var ease = 'power4.inOut'\n\n    var scene = webgl.scenesParams[sceneKey]\n\n    var cameraTarget = {\n        x: webgl.cameraTarget.x,\n        y: webgl.cameraTarget.y,\n        z: webgl.cameraTarget.z,\n    }\n\n    // tween between the two pivot targets of each scene\n    var directionTween = TweenLite.to(cameraTarget, {\n        x: scene.cameraTarget.x,\n        y: scene.cameraTarget.y,\n        z: scene.cameraTarget.z,\n        duration: duration,\n        ease: ease,\n    })\n\n    // tween the camera to its new position\n    var cameraTween = TweenLite.to(webgl.camera.position, {\n        x: scene.cameraPosition.x,\n        y: scene.cameraPosition.y,\n        z: scene.cameraPosition.z,\n        onUpdate: function () {\n            webgl.camera.lookAt(cameraTarget.x, cameraTarget.y, cameraTarget.z)\n        },\n        onComplete: function () {\n            return\n        },\n        duration: duration,\n        ease: ease,\n    })\n\n    await cameraTween\n}\n","// GSAP Library\nimport { TweenMax } from 'gsap'\nimport { TweenLite } from 'gsap'\n\n// Webgl Transitions\nimport webgl from '../lib/webgl'\nimport { sceneTransition } from './WebGLTransition'\n\nconst charming = require('charming')\n\n// Fade\nexport default class FadeTransition {\n    constructor() {\n        this.webglDuration = 2000\n        this.screenDuration = 0.5\n    }\n\n    async screenIn() {}\n\n    async screenOut() {\n        var screen = document.getElementsByClassName('loading-screen')[0]\n        var tl = TweenLite.to(screen, {\n            opacity: 0,\n            duration: this.screenDuration,\n            ease: 'Linear.easeNone',\n        })\n        await tl\n        screen.style.display = 'none' // reset loading screen\n        screen.style.opacity = 1 // reset loading screen\n    }\n\n    async leave(data) {\n        var _this = this\n\n        var everything = data.current.container\n        if (everything) {\n            TweenMax.to(everything, 0.8, { opacity: 0 })\n        }\n\n        // Webgl animation\n        // get custom data set in html of trigger element\n        var sceneKey = null // default\n        if (data.trigger == 'back') {\n            // browser back button was clicked\n            sceneKey = webgl.previousScenes.pop()\n        } else {\n            // link was an anchor (not the back button)\n            sceneKey = data.trigger.dataset.scene\n        }\n\n        await sceneTransition(webgl, sceneKey, this.webglDuration)\n\n        async function setNewScene() {\n            webgl.currentScene = webgl.scenes[sceneKey]\n            webgl.currentSceneParams = webgl.scenesParams[sceneKey]\n            webgl.camera.inTransition = false\n        }\n\n        function renderToImage() {\n            var imageDataURL = webgl.renderer.domElement.toDataURL('image/png')\n            var loadingScreen = document.getElementsByClassName('loading-screen')[0]\n            loadingScreen.src = imageDataURL\n            loadingScreen.style.display = 'block'\n        }\n\n        // Updates new scene (materials change here)\n        await setNewScene()\n\n        // Render old scene in new camera position\n        renderToImage()\n    }\n\n    async enter(data) {\n        // Screen out after material update\n\n        // Fade out the render of the old scene\n        this.screenOut()\n    }\n}\n","/*\nHandles all site behaviour\n*/\nimport assets from './lib/AssetManager'\n\n// create a singleton instance of webgl (called 'webgl')\nimport webgl from './lib/webgl'\n\n// create singleton scenes\nimport landingScene from './scenes/landing'\nimport aboutScene from './scenes/about'\nimport workScene from './scenes/work'\nimport contactScene from './scenes/contact'\n\n// camera\nimport StaticCameraBehaviour from './objects/cameras/StaticCamera'\n\n// barba for transitions\nimport barba from '@barba/core'\nimport FadeTransition from './transitions/FadeTransition.js'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n    // show canvas\n    webgl.canvas.style.visibility = ''\n    window.WEBGL = true\n\n    // init default for browser back button\n    webgl.previousSceneKeyTemp = 'landingScene'\n\n    var fadeTransition = new FadeTransition()\n\n    barba.init({\n        debug: false,\n        preventRunning: true, // prevent double clicking\n        transitions: [\n            // setting transitions between pages\n            {\n                name: 'default-transition',\n                async beforeLeave(data) {\n                    if (data.trigger == 'forward') {\n                        // just take users home\n                        window.location.href = '../'\n                    } else if (data.trigger != 'back') {\n                        webgl.previousSceneKeyTemp = webgl.currentSceneParams.sceneKey\n                        webgl.previousScenes.push(webgl.previousSceneKeyTemp)\n                    }\n                },\n\n                async leave(data) {\n                    await fadeTransition.leave(data)\n                },\n\n                async enter(data) {\n                    await fadeTransition.enter(data)\n                },\n\n                async afterEnter(data) {},\n            },\n        ],\n        views: [\n            //for updating settings specific to each page\n            {\n                namespace: 'home',\n                async beforeEnter(data) {\n                    landingScene.postprocessing()\n                },\n            },\n            {\n                namespace: 'about',\n                async beforeEnter(data) {\n                    aboutScene.postprocessing()\n                },\n            },\n            {\n                namespace: 'work',\n                async beforeEnter(data) {\n                    workScene.postprocessing()\n                },\n            },\n            {\n                namespace: 'contact',\n                async beforeEnter(data) {\n                    contactScene.postprocessing()\n                },\n            },\n        ],\n    })\n\n    // set active scene and postprocessing\n    // currentSceneParams include everything not in three.js\n    webgl.currentScene = webgl.scenes['landingScene']\n    webgl.currentSceneParams = webgl.scenesParams['landingScene']\n\n    const staticCameraBehaviour = new StaticCameraBehaviour(webgl)\n\n    // start animation loop\n    webgl.start()\n    webgl.draw()\n})\n"],"sourceRoot":""}